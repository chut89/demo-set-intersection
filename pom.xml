<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>demo-set-intersection</artifactId>
    <name>demo-set-intersection</name>
    <groupId>com.example</groupId>
    <version>1.0.0-SNAPSHOT</version>	    
    <packaging>jar</packaging>
    <description>Demo project showing how to use compute the intersection of two sets</description>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>2.15.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring-boot.version}</version>
            <!-- exclude logback so that only one slf4j provider will be found -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>                    
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>        
        <!--dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>        
        </dependency>        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-reactor-netty</artifactId>
            <version>${spring-boot.version}</version>
        </dependency-->
        <dependency>    
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
            <!--exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions-->
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <scope>test</scope>
          <version>${junit.version}</version>
        </dependency>        
        <!--dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency-->
        <!-- In this discussion https://github.com/spring-projects/spring-boot/issues/15749 mockk is not fully supported by springboot -->
        <!-- In my opinion mockito-kotlin is still more acitve than mockk-->
        <dependency>
            <groupId>org.mockito.kotlin</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>5.2.1</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.14.10</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>1.14.10</version>
        </dependency>
        <!-- Place this before reload4j so that spring boot will pick apache log4j -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-reload4j</artifactId>
            <version>2.0.9</version>
        </dependency>        
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api-kotlin</artifactId>
          <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>            
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>6.2.0</version>            
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlinx-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>3.6.0</version>
        </dependency>        
        <!--dependency>
            <groupId>io.projectreactor.kotlin</groupId>
            <artifactId>reactor-kotlin-extensions</artifactId>
            <version>1.2.2</version>
        </dependency-->        
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
            <version>3.6.0</version>            
        </dependency>
        <!--dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
            <version>2.2.0</version>
        </dependency-->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>2.3.0</version>
        </dependency>        
    </dependencies>

    <build>
        <!-- Please don't remove this or jacoco will NOT be able to find source files -->
        <sourceDirectory>${project.srcdir}</sourceDirectory>
        <testSourceDirectory>${project.testsrcdir}</testSourceDirectory>
        <plugins>
            <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <configuration>
                <profiles>
                  <profile>local</profile>
                </profiles>
              </configuration>
              <version>${spring-boot.version}</version>
            </plugin>        
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <!-- We are not sure if we're compile java source or not, assuming not then the following is the short hand of executions configured for compile, test-compile, kapt and test-kapt -->
                <!--extensions>true</extensions-->
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.srcdir}</sourceDir>
                                <!--sourceDir>${project.basedir}/src/main/java</sourceDir-->
                            </sourceDirs>
                            <jvmTarget>${java.version}</jvmTarget>
                            <args>
                                <arg>-Xjvm-default=all-compatibility</arg>
                            </args>>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.testsrcdir}</sourceDir>
                            </sourceDirs>
                            <jvmTarget>${java.version}</jvmTarget>
                        </configuration>
                    </execution>
                </executions>                
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>                
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <arg>-verbose</arg>
                        <arg>-Xlint:all,-options,-path</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven >
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution-->
                    <!-- Replacing default-testCompile as it is treated specially by maven >
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution-->
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>SpringContextTest</include>
                        <include>**/*Test</include>
                    </includes>
                    <excludes>
                        <exclude>**/*IntegrationTests</exclude>
                    </excludes>
                </configuration>
            </plugin>	            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTests</include>
                    </includes>
                    <excludes>
                        <exclude>**/*Test</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>                
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                     <execution>
                        <id>ktlint-generate-editor-config</id>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${project.basedir}" fork="true" failonerror="true"
                                    classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                                  <!-- see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information -->
                                  <arg value="generateEditorConfig"/>
                                  <arg value="--code-style=ktlint_official"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>ktlint</id>
                        <phase>validate</phase>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${project.basedir}" fork="true" failonerror="true"
                                    classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                                  <!-- see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information -->
                                  <!--arg value="-l debug"/-->
                                  <arg value="src/**/*.kt"/>
                                  <!--arg value="src/**/*.java"/-->
                                  <arg value="--reporter=plain,output=${project.basedir}/target/ktlint-reports/ktlint.txt" />  
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>ktlint-format</id>
                        <configuration>
                        <target name="ktlint">
                            <java taskname="ktlint" dir="${project.basedir}" fork="true" failonerror="true"
                                classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                                <!-- Note: the JVM args below is only required when running ktlint with Java 16+ in format mode -->
                                <jvmarg value="--add-opens=java.base/java.lang=ALL-UNNAMED"/>
                                <!-- see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information -->
                                <arg value="-F"/>
                                <arg value="src/**/*.kt"/>
                            </java>
                        </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                     <execution>
                        <id>detekt-generate-config</id>
                        <configuration>
                            <target name="detekt">
                                <java taskname="detekt" dir="${project.basedir}" fork="true" failonerror="true"
                                    classpathref="maven.plugin.classpath" classname="io.gitlab.arturbosch.detekt.cli.Main">
                                  <arg value="--generate-config"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- This can be run separately with mvn antrun:run@detekt -->
                        <id>detekt</id>
                        <phase>verify</phase>
                        <configuration>
                            <target name="detekt">
                                <java taskname="detekt" dir="${project.basedir}"
                                      fork="true" 
                                      failonerror="false"
                                      classname="io.gitlab.arturbosch.detekt.cli.Main"
                                      classpathref="maven.plugin.classpath">
                                    <arg value="--input"/>
                                    <arg value="${project.basedir}/src/main/kotlin"/>
                                    <arg value="--excludes"/>
                                    <arg value="**/special/package/internal/**"/>
                                    <arg value="--report"/>
                                    <arg value="xml:${project.basedir}/target/detekt-reports/detekt.xml"/>
                                    <arg value="--config"/>
                                    <arg value="${project.basedir}/detekt.yml"/>
                                    <!--arg value="baseline"/>
                                    <arg value="${project.basedir}/target/detekt-reports/baseline.xml"/-->
                                </java>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.pinterest.ktlint</groupId>
                        <artifactId>ktlint-cli</artifactId>
                        <version>1.0.1</version>
                    </dependency>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-cli</artifactId>
                        <version>1.23.4</version>
                    </dependency>
                    <!-- additional 3rd party ruleset(s) can be specified here -->
                </dependencies>
            </plugin>            
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <configuration>
                    <executable>maven</executable>
                </configuration>
            </plugin>            
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                         <id>integration-test</id>
                         <goals>
                            <goal>generate</goal>
                         </goals>
                    </execution>
                </executions>
            </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>4.0.0-M12</version>
          </plugin-->
        </plugins>
    </build>

    <properties>
        <kotlin.version>1.9.20</kotlin.version>
        <kotlinx-coroutines.version>1.7.3</kotlinx-coroutines.version>
        <java.version>20</java.version> 
        <spring-boot.version>3.2.0</spring-boot.version>
        <!--r2dbc.version>1.0.0.RELEASE</r2dbc.version>
        <r2dbc-spi.version>1.0.0.RELEASE</r2dbc-spi.version>
        <h2-r2dbc.version>1.0.0.RELEASE</h2-r2dbc.version-->
        <junit.version>5.10.1</junit.version>
        <mockito.version>3.1.0</mockito.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>    
        <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>    
        <!--exec-maven-plugin.version>1.6.0</exec-maven-plugin.version-->
        <!-- incremental compile is experimental-->
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <!-- Assuming the project contains kotlin source only-->
        <project.srcdir>${project.basedir}/src/main/kotlin</project.srcdir>
        <project.testsrcdir>${project.basedir}/src/test/kotlin</project.testsrcdir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    <!--profiles>
      <profile>
        <id>local</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
      </profile>
    </profiles-->    
</project>
